@page "/ord"
@page "/ord/{id:int}"
@inject IOrderService OrderService

@if (Id == null)
{
	<PageTitle>Add Order</PageTitle>
	<h3>Add Order</h3>	
}
else
{
	<PageTitle>Edit @ord.NoOrder </PageTitle>
	<h3>Edit @ord.NoOrder </h3>
}

<EditForm Model="ord" OnSubmit="HandleSubmit">
    <div>
        <label for="NoOrder">No Order</label>
        <InputText id="NoOrder" @bind-Value="ord.NoOrder" class="form-control"></InputText>
    </div>
    <div>
        <label for="NomorMeja">Nomor Meja</label>
        <InputText id="NomorMeja" @bind-Value="ord.NomorMeja" class="form-control"></InputText>
    </div>
    <div>
        <label>Status</label><br />
        <InputSelect @bind-Value="ord.MenusId" class="form-select">
            @foreach (var menus in OrderService.Menu)
            {
                <option value="@menus.Id">@menus.Status</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteOrder">Delete Order</button>
</EditForm>


@code {
    [Parameter]

    public int? Id { get; set; }

    string btnText = string.Empty;

    Order ord = new Order { Menus = new Menus() };


    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Simpan Order Baru" : "Update Order";

        await OrderService.GetMenu();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            ord.Menus = OrderService.Menu[0];
            ord.MenusId = ord.Menus.Id;
        }
        else
        {
            ord = await OrderService.GetSingleOrder((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await OrderService.CreateOrder(ord);
        }
        else
        {
            await OrderService.UpdateOrder(ord);
        }
    }

    async Task DeleteOrder()
    {
        await OrderService.DeleteOrder(ord.Id);
    }


}
